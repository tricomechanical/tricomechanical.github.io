(function() {
    function r(e) {
        for (var t = 1; t < arguments.length; t++)
            e = e.replace(new RegExp("\\{" + (t - 1) + "}","g"), arguments[t]);
        return e
    }
    function i() {
        arguments[0] = "CrossSlide: " + arguments[0];
        throw new Error(r.apply(null, arguments))
    }
    function s(e) {
        var t = 1;
        var n = e.replace(/^\s*|\s*$/g, "").split(/\s+/);
        if (n.length > 3)
            throw new Error;
        if (n[0] == "center")
            if (n.length == 1)
                n = ["center", "center"];
            else if (n.length == 2 && n[1].match(/^[\d.]+x$/i))
                n = ["center", "center", n[1]];
        if (n.length == 3)
            t = parseFloat(n[2].match(/^([\d.]+)x$/i)[1]);
        var r = n[0] + " " + n[1];
        if (r == "left top" || r == "top left")
            return {
                xrel: 0,
                yrel: 0,
                zoom: t
            };
        if (r == "left center" || r == "center left")
            return {
                xrel: 0,
                yrel: .5,
                zoom: t
            };
        if (r == "left bottom" || r == "bottom left")
            return {
                xrel: 0,
                yrel: 1,
                zoom: t
            };
        if (r == "center top" || r == "top center")
            return {
                xrel: .5,
                yrel: 0,
                zoom: t
            };
        if (r == "center center")
            return {
                xrel: .5,
                yrel: .5,
                zoom: t
            };
        if (r == "center bottom" || r == "bottom center")
            return {
                xrel: .5,
                yrel: 1,
                zoom: t
            };
        if (r == "right top" || r == "top right")
            return {
                xrel: 1,
                yrel: 0,
                zoom: t
            };
        if (r == "right center" || r == "center right")
            return {
                xrel: 1,
                yrel: .5,
                zoom: t
            };
        if (r == "right bottom" || r == "bottom right")
            return {
                xrel: 1,
                yrel: 1,
                zoom: t
            };
        return {
            xrel: parseInt(n[0].match(/^(\d+)%$/)[1]) / 100,
            yrel: parseInt(n[1].match(/^(\d+)%$/)[1]) / 100,
            zoom: t
        }
    }
    var e = jQuery
      , t = e.fn.startAnimation ? "startAnimation" : "animate"
      , n = "pause plugin missing.";
    e.fn.crossSlide = function(n, o, u) {
        var a = this
          , f = this.width()
          , l = this.height();
        if (a.length != 1)
            i("crossSlide() must be called on exactly 1 element");
        a.get(0).crossSlideArgs = [n, o, u];
        o = e.map(o, function(t) {
            return e.extend({}, t)
        });
        if (!n.easing)
            n.easing = n.variant ? "swing" : "linear";
        if (!u)
            u = function() {}
            ;
        (function(e) {
            function n(r, i) {
                i.onload = function(n) {
                    t++;
                    o[r].width = i.width;
                    o[r].height = i.height;
                    if (t == o.length)
                        e()
                }
                ;
                i.src = o[r].src;
                if (r + 1 < o.length)
                    n(r + 1, new Image)
            }
            var t = 0;
            n(0, new Image)
        }
        )(function() {
            function x(e, t) {
                var n = [0, c / (e.time_ms + 2 * c), 1 - c / (e.time_ms + 2 * c), 1][t];
                return {
                    left: Math.round(e.from.left + n * (e.to.left - e.from.left)),
                    top: Math.round(e.from.top + n * (e.to.top - e.from.top)),
                    width: Math.round(e.from.width + n * (e.to.width - e.from.width)),
                    height: Math.round(e.from.height + n * (e.to.height - e.from.height))
                }
            }
            function C(r, i) {
                if (r % 2 == 0) {
                    if (h) {
                        var s = r / 2
                          , a = (s - 1 + o.length) % o.length
                          , f = T.eq(s)
                          , l = T.eq(a);
                        var p = function() {
                            u(s, f.get(0));
                            l.css("visibility", "hidden");
                            setTimeout(i, h)
                        }
                    } else {
                        var d = r / 2
                          , a = (d - 1 + o.length) % o.length
                          , v = T.eq(d)
                          , l = T.eq(a)
                          , m = o[d].time_ms
                          , g = x(o[d], n.variant ? 3 : 2);
                        var p = function() {
                            u(d, v.get(0));
                            l.css("visibility", "hidden");
                            v[t](g, m, n.easing, i)
                        }
                    }
                } else {
                    var y = Math.floor(r / 2)
                      , b = Math.ceil(r / 2) % o.length
                      , w = T.eq(y)
                      , E = T.eq(b)
                      , S = {}
                      , k = {
                        visibility: "visible"
                    }
                      , L = {};
                    if (b > y) {
                        k.opacity = 0;
                        L.opacity = 1;
                        if (n.doubleFade)
                            S.opacity = 0
                    } else {
                        S.opacity = 0;
                        if (n.doubleFade) {
                            k.opacity = 0;
                            L.opacity = 1
                        }
                    }
                    if (!h) {
                        e.extend(k, x(o[b], 0));
                        if (!n.variant) {
                            e.extend(S, x(o[y], 3));
                            e.extend(L, x(o[b], 1))
                        }
                    }
                    if (e.isEmptyObject(L)) {
                        var p = function() {
                            u(b, E.get(0), y, w.get(0));
                            E.css(k);
                            w[t](S, c, "linear", i)
                        }
                    } else if (e.isEmptyObject(S)) {
                        var p = function() {
                            u(b, E.get(0), y, w.get(0));
                            E.css(k);
                            E[t](L, c, "linear", i)
                        }
                    } else {
                        var p = function() {
                            u(b, E.get(0), y, w.get(0));
                            E.css(k);
                            E[t](L, c, "linear");
                            w[t](S, c, "linear", i)
                        }
                    }
                }
                if (n.loop && r == o.length * 2 - 2) {
                    var A = p;
                    p = function() {
                        if (--N)
                            A()
                    }
                }
                if (r > 0)
                    return C(r - 1, p);
                else
                    return p
            }
            if (n.speed && n.sleep)
                i("you cannot set both speed and sleep at the same time.");
            var c = Math.round(n.fade * 1e3);
            if (n.sleep)
                var h = Math.round(n.sleep * 1e3);
            if (n.speed)
                var p = n.speed / 1e3
                  , d = Math.round(c * p);
            a.empty().css({
                overflow: "hidden",
                padding: 0
            });
            if (!/^(absolute|relative|fixed)$/.test(a.css("position")))
                a.css({
                    position: "relative"
                });
            if (n.shuffle)
                o.sort(function() {
                    return Math.random() - .5
                });
            var v = 0
              , m = 0;
            for (var g = 0; g < o.length; ++g) {
                var y = o[g];
                if (!y.src)
                    i("missing src parameter in picture {0}.", g + 1);
                if (p) {
                    switch (y.dir) {
                    case "up":
                        y.from = {
                            xrel: .5,
                            yrel: 0,
                            zoom: 1
                        };
                        y.to = {
                            xrel: .5,
                            yrel: 1,
                            zoom: 1
                        };
                        var b = y.height - l - 2 * d;
                        break;
                    case "down":
                        y.from = {
                            xrel: .5,
                            yrel: 1,
                            zoom: 1
                        };
                        y.to = {
                            xrel: .5,
                            yrel: 0,
                            zoom: 1
                        };
                        var b = y.height - l - 2 * d;
                        break;
                    case "left":
                        y.from = {
                            xrel: 0,
                            yrel: .5,
                            zoom: 1
                        };
                        y.to = {
                            xrel: 1,
                            yrel: .5,
                            zoom: 1
                        };
                        var b = y.width - f - 2 * d;
                        break;
                    case "right":
                        y.from = {
                            xrel: 1,
                            yrel: .5,
                            zoom: 1
                        };
                        y.to = {
                            xrel: 0,
                            yrel: .5,
                            zoom: 1
                        };
                        var b = y.width - f - 2 * d;
                        break;
                    default:
                        i("missing or malformed dir parameter in picture {0}.", g + 1)
                    }
                    if (b <= 0)
                        i("impossible animation: either picture {0} is too small or " + "div is too large or fade duration too long.", g + 1);
                    y.time_ms = Math.round(b / p)
                } else if (!h) {
                    if (!y.from || !y.to || !y.time)
                        i("missing either speed/sleep option, or from/to/time params " + "in picture {0}.", g + 1);
                    try {
                        y.from = s(y.from)
                    } catch (w) {
                        i('malformed "from" parameter in picture {0}.', g + 1)
                    }
                    try {
                        y.to = s(y.to)
                    } catch (w) {
                        i('malformed "to" parameter in picture {0}.', g + 1)
                    }
                    if (!y.time)
                        i('missing "time" parameter in picture {0}.', g + 1);
                    y.time_ms = Math.round(y.time * 1e3)
                }
                if (y.from)
                    e.each([y.from, y.to], function(e, t) {
                        t.width = Math.round(y.width * t.zoom);
                        t.height = Math.round(y.height * t.zoom);
                        t.left = Math.round((f - t.width) * t.xrel);
                        t.top = Math.round((l - t.height) * t.yrel)
                    });
                var E, S;
                S = E = e(r('<img src="{0}"/>', y.src));
                if (y.href)
                    S = e(r('<a href="{0}"></a>', y.href)).append(E);
                if (y.onclick)
                    S.click(y.onclick);
                if (y.alt)
                    E.attr("alt", y.alt);
                if (y.rel)
                    S.attr("rel", y.rel);
                if (y.href && y.target)
                    S.attr("target", y.target);
                S.appendTo(a);
                if (E.width() > v)
                    v = E.width();
                if (E.height() > m)
                    m = E.height()
            }
            if (!a.width() || n.adaptSize)
                a.width(v);
            if (!a.height() || n.adaptSize)
                a.height(m);
            delete p;
            var T = a.find("img").css({
                position: "absolute",
                visibility: "hidden",
                top: 0,
                left: 0,
                "z-index": "auto",
                border: 0
            });
            T.eq(0).css({
                visibility: "visible"
            });
            if (!h)
                T.eq(0).css(x(o[0], n.variant ? 0 : 1));
            var N = n.loop;
            var k = C(o.length * 2 - 1, function() {
                return k()
            });
            k()
        });
        return a
    }
    ;
    e.fn.crossSlideFreeze = function() {
        this.find("img").stop()
    }
    ;
    e.fn.crossSlideStop = function() {
        this.find("img").stop().remove()
    }
    ;
    e.fn.crossSlideRestart = function() {
        this.find("img").stop().remove();
        e.fn.crossSlide.apply(this, this.get(0).crossSlideArgs)
    }
    ;
    e.fn.crossSlidePause = function() {
        if (!e.fn.pause)
            i(n);
        this.find("img").pause()
    }
    ;
    e.fn.crossSlideResume = function() {
        if (!e.fn.pause)
            i(n);
        this.find("img").resume()
    }
}
)()
